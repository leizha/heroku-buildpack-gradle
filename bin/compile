#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BPLOG_PREFIX="buildpack.gradle"

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BIN_DIR=$BP_DIR/bin
OPT_DIR=$BP_DIR/opt
LIB_DIR=$BP_DIR/lib

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

PROJECT_DIR="$(cat $ENV_DIR/PROJECT_DIR)"
INSTALL_DIR=$BUILD_DIR
BUILD_DIR=$BUILD_DIR/$PROJECT_DIR


# By default gradle will write its cache in `$BUILD_DIR/.gradle`. Rather than
# using the --project-cache-dir option, which muddies up the command, we
# symlink this directory to the cache.
create_project_cache_symlink() {
  local buildpackCacheDir="${1:?}/.gradle-project"
  local projectCacheLink="${2:?}/.gradle"
  if [ ! -d "$projectCacheLink" ]; then
    mkdir -p "$buildpackCacheDir"
    ln -s "$buildpackCacheDir" "$projectCacheLink"
    trap "rm -f $projectCacheLink" EXIT
  fi
}

install_jdk() {
  local install_dir=${1:?}
  local cache_dir=${2:?}


  JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://buildpack-registry.s3.amazonaws.com/buildpacks/heroku/jvm.tgz}
  mkdir -p /tmp/jvm-common
  curl --retry 3 --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
  source /tmp/jvm-common/bin/util
  source /tmp/jvm-common/bin/java
  source /tmp/jvm-common/opt/jdbc.sh



  install_java_with_overlay "${install_dir}" "${cache_dir}"

}


# Usage: $ _env-blacklist pattern
# Outputs a regex of default blacklist env vars.
_env_blacklist() {
  local regex=${1:-''}
  if [ -n "$regex" ]; then
    regex="|$regex"
  fi
  echo "^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH$regex)$"
}

# Usage: $ export-env ENV_DIR WHITELIST BLACKLIST
# Exports the environment variables defined in the given directory.
export_env() {
  local env_dir=${1:-$ENV_DIR}
  local whitelist=${2:-''}
  local blacklist="$(_env_blacklist $3)"
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist" | grep -qvE "$blacklist" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env $ENV_DIR "." "JAVA_OPTS|JAVA_TOOL_OPTIONS"

install_jdk "${INSTALL_DIR}" "${CACHE_DIR}"

export GRADLE_OPTS=${GRADLE_OPTS-"-Dorg.gradle.daemon=false -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false"}

mkdir -p "$CACHE_DIR/.gradle"
export GRADLE_USER_HOME=${GRADLE_USER_HOME:-$CACHE_DIR/.gradle}

create_project_cache_symlink "$CACHE_DIR" "$BUILD_DIR"

BUILDCMD="./gradlew build -x test"

cd $BUILD_DIR

# build app
echo "-----> executing $BUILDCMD"

$BUILDCMD 2>&1

if [ $? -ne 0 ]; then
  echo "gradle build failed. aborting"
  exit 1
fi

# https://github.com/heroku/heroku-buildpack-gradle/issues/49
rm -rf "$CACHE_DIR/.gradle/nodejs"

mv $BUILD_DIR/build $INSTALL_DIR
